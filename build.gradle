// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext {
    kotlin_version = "1.6.10"
    dagger_hilt_version = "2.41"
    coroutines_version = "1.6.0"
    nav_version = "2.4.1"
    ktlint_version = "0.43.2"
  }

  repositories {
    google()
    jcenter()
    mavenCentral()
    gradlePluginPortal()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:7.1.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.google.dagger:hilt-android-gradle-plugin:$dagger_hilt_version"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:6.3.0"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    mavenCentral()
    gradlePluginPortal()
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
  }
}

subprojects {
  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target("**/*.kt")

      // Spotless doesn't read .editorconfig yet: https://github.com/diffplug/spotless/issues/142
      ktlint(ktlint_version).userData([
        'indent_size'             : '2',
        'ij_kotlin_imports_layout': '*',
        'end_of_line'             : 'lf',
        'charset'                 : 'utf-8',
      ])

      trimTrailingWhitespace()
      indentWithSpaces()
      endWithNewline()
    }

    format("xml") {
      target("**/res/**/*.xml")

      trimTrailingWhitespace()
      indentWithSpaces()
      endWithNewline()
    }

    groovyGradle {
      target('*.gradle')

      trimTrailingWhitespace()
      indentWithSpaces()
      endWithNewline()
    }

    kotlinGradle {
      target("**/*.gradle.kts", "*.gradle.kts")

      ktlint(ktlint_version).userData([
        "indent_size"             : "2",
        "ij_kotlin_imports_layout": "*",
        "end_of_line"             : "lf",
        "charset"                 : "utf-8"
      ])

      trimTrailingWhitespace()
      indentWithSpaces()
      endWithNewline()
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
